name: "Code scanning - action"

on:
  push:
  pull_request:
  schedule:
    - cron: '0 4 * * 5'

jobs:
  CodeQL-Build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # We must fetch at least the immediate parents so that if this is
        # a pull request then we can checkout the head.
        fetch-depth: 2

    # If this run was triggered by a pull request event, then checkout
    # the head of the pull request instead of the merge commit.
    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      languages: cpp

    - name: Build
      run: |
           if [ -d "vcpkg/.git" ] ; then echo vcpkg cached ; else rm -rf vcpkg ; git clone https://github.com/Microsoft/vcpkg ; fi
           cd vcpkg
           git checkout .
           git pull
           ./bootstrap-vcpkg.sh
           echo "set(VCPKG_BUILD_TYPE release)" >> triplets/x64-linux.cmake
           ./vcpkg install jsoncons --recurse --clean-after-build
           rm -rf .git
           rm -rf ports
           rm -rf toolsrc
           cd ..
           mkdir build
           cd build
           cmake -DCMAKE_BUILD_TYPE="Release" -DCMAKE_TOOLCHAIN_FILE=../vcpkg/scripts/buildsystems/vcpkg.cmake ..
           cmake --build . --target install
           cd ..

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
